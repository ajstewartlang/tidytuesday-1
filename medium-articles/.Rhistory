theme(legend.position="none")
View(merged_bigram)
View(tidy_articles_med_bigram_counts)
View(tidy_articles_med_bigram)
View(tidy_articles_med_bigram_counts)
View(tidy_articles_med_unigram)
View(tidy_articles_med_unigram_counts)
View(tidy_articles_top_bigram)
View(tidy_articles_top_bigram_counts)
View(tidy_articles_top_unigram)
head(tidy_articles_med_bigram)
View(tidy_articles_top_unigram_counts)
View(tidy_articles_med_bigram)
bigram_all <- bind_rows(mutate(tidy_articles_med_bigram, viral = 0),
mutate(tidy_articles_top_bigram, viral = 1)) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(viral, word) %>%
group_by(viral) %>%
mutate(proportion = n / sum(n)) %>%
select(-n)
View(bigram_all)
bigram_all <- bind_rows(mutate(tidy_articles_med_bigram, viral = 0),
mutate(tidy_articles_top_bigram, viral = 1)) %>%
# mutate(word = str_extract(word, "[a-z']+")) %>%
count(viral, word) %>%
group_by(viral) %>%
mutate(proportion = n / sum(n)) %>%
select(-n)
View(bigram_all)
viral_df_bi <- subset(bigram_all, viral==1) %>%
rename(proportion_viral = proportion)
mediocre_df_bi <- subset(bigram_all, viral==0) %>%
rename(proportion_med = proportion)
merged_bigram <- inner_join(viral_df_bi, mediocre_df_bi, by='word')
View(merged_bigram)
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
?geom_abline
?labs
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(0, 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
unigram_all <- bind_rows(mutate(tidy_articles_med_unigram, viral = 0),
mutate(tidy_articles_top_unigram, viral = 1)) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(viral, word) %>%
group_by(viral)
View(unigram_all)
viral_df_uni <- subset(unigram_all, viral==1) %>%
rename(n_viral = n)
mediocre_df_uni <- subset(unigram_all, viral==0) %>%
rename(n_med = n)
merged_unigram <- inner_join(viral_df_uni, mediocre_df_uni, by='word')
View(merged_unigram)
viral_df_uni <- subset(unigram_all, viral==1) %>%
rename(n_viral = n) %>%
mutate(proportion_viral = n_viral / sum(n_viral))
View(viral_df_uni)
mediocre_df_uni <- subset(unigram_all, viral==0) %>%
rename(n_med = n) %>%
mutate(proportion_med = n_med / sum(n_med))
merged_unigram <- inner_join(viral_df_uni, mediocre_df_uni, by='word')
ggplot(merged_unigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
ggplot(merged_unigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept=0, slope=1,color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
viral_df_bi <- subset(bigram_all, viral==1) %>%
rename(n_viral = n) %>%
mutate(proportion_viral = n_viral / sum(n_viral))
bigram_all <- bind_rows(mutate(tidy_articles_med_bigram, viral = 0),
mutate(tidy_articles_top_bigram, viral = 1)) %>%
count(viral, word) %>%
group_by(viral)
viral_df_bi <- subset(bigram_all, viral==1) %>%
rename(n_viral = n) %>%
mutate(proportion_viral = n_viral / sum(n_viral))
mediocre_df_bi <- subset(bigram_all, viral==0) %>%
rename(n_med = n) %>%
mutate(proportion_viral = n_med / sum(n_med))
merged_bigram <- inner_join(viral_df_bi, mediocre_df_bi, by='word')
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
mediocre_df_bi <- subset(bigram_all, viral==0) %>%
rename(n_med = n) %>%
mutate(proportion_med = n_med / sum(n_med))
merged_bigram <- inner_join(viral_df_bi, mediocre_df_bi, by='word')
View(merged_bigram)
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
xlim(0,1) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
?scale_x_log10
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format(), limits=c(0,0.1)) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format(), limits=c(0.001,0.1)) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
# scale_x_log10(labels = percent_format(), limits=c(0.001,0.1)) +
# scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format(), limits=c(0.000001,0.01)) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format(), limits=c(0.00001,0.01)) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format(), limits=c(0.0001,0.01)) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format(), limits=c(0.001,0.01)) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
subset(merged_bigram, word=='carlo method')
mediocre_articles <- articles %>%
filter(claps < quantile(articles$claps, 0.75) & claps > quantile(articles$claps, 0.25))
View(mediocre_articles)
min(mediocre_articles$claps)
max(mediocre_articles$claps)
#gather data
url <- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018-12-04/medium_datasci.csv'
articles <- read_csv(url)
data(stop_words)
articles <- articles %>%
mutate(
id = seq(1:nrow(articles)),
tag_multiple = ifelse((tag_ai + tag_artificial_intelligence + tag_big_data + tag_data +
tag_data_science + tag_data_visualization + tag_deep_learning +
tag_machine_learning) > 1,1,0)
) %>%
select(id,author,title,publication,claps,tag_ai,tag_artificial_intelligence,tag_big_data,
tag_data,tag_data_science,tag_data_visualization,tag_deep_learning,tag_machine_learning) %>%
arrange(desc(claps))
top_articles <- articles %>%
filter(claps > quantile(articles$claps, 0.99))
mediocre_articles <- articles %>%
filter(claps < quantile(articles$claps, 0.75) & claps > quantile(articles$claps, 0.25))
tidy_my_text <- function(df, gram, freq) {
if (gram=='bigram') {
tidy_df <- df %>%
unnest_tokens(word,title,token = 'ngrams', n=2, to_lower = TRUE, drop = TRUE) %>%
separate(word,c('word1','word2'),sep = ' ') %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
drop_na(word1) %>%
drop_na(word2) %>%
mutate(word_stem1 = wordStem(word1, language="english"),
word_stem2 = wordStem(word2, language="english")) %>%
unite(word, word_stem1, word_stem2, sep = ' ') %>%
filter(!str_detect(word, "[:digit:]"))
} else {
tidy_df <- df %>%
unnest_tokens(word,title,token = 'ngrams', n = 1, to_lower = TRUE, drop = TRUE) %>%
drop_na(word) %>%
anti_join(stop_words) %>%
mutate(word = wordStem(word, language="english")) %>%
filter(!str_detect(word, "[:digit:]")) %>%
filter(!str_detect(word, 'na')) %>%
filter(!str_detect(word, 'de'))
}
if (freq == TRUE) {
tidy_df <- tidy_df %>%
count(word, id, author, claps, sort = TRUE)
}
return (tidy_df)
}
group_by_word <- function(df) {
grouped_df <- df %>%
group_by(word) %>%
summarise(mean=mean(n),total=sum(n)) %>%
arrange(desc(total))
return (grouped_df)
}
#get tidy dfs
tidy_articles_med_unigram <- tidy_my_text(mediocre_articles, 'unigram', freq = FALSE)
tidy_articles_top_unigram <- tidy_my_text(top_articles, 'unigram', freq = FALSE)
tidy_articles_med_bigram <- tidy_my_text(mediocre_articles, 'bigram', freq = FALSE)
tidy_articles_top_bigram <- tidy_my_text(top_articles, 'bigram', freq = FALSE)
tidy_articles_med_unigram_counts <- tidy_my_text(mediocre_articles, 'unigram', freq = TRUE)
tidy_articles_top_unigram_counts <- tidy_my_text(top_articles, 'unigram', freq = TRUE)
tidy_articles_med_bigram_counts <- tidy_my_text(mediocre_articles, 'bigram', freq = TRUE)
tidy_articles_top_bigram_counts <- tidy_my_text(top_articles, 'bigram', freq = TRUE)
#group by word
grouped_med_unigram <- group_by_word(tidy_articles_med_unigram_counts)
grouped_top_unigram <- group_by_word(tidy_articles_top_unigram_counts)
grouped_med_bigram <- group_by_word(tidy_articles_med_bigram_counts)
grouped_top_bigram <- group_by_word(tidy_articles_top_bigram_counts)
freq_plot <- function(df, my_title, cutoff) {
plot <- ggplot(aes(word,total),data = subset(df,total>=cutoff)) +
geom_col() +
xlab(NULL) +
coord_flip() +
theme_minimal() +
labs(title = my_title)
}
grouped_top_unigram
grouped_top_unigram$total[10]
unigram_viral_plot <- freq_plot(grouped_top_unigram, 'Viral Posts: Unigram', grouped_top_unigram$total[10])
unigram_med_plot <- freq_plot(grouped_med_unigram, 'Remaining Posts: Unigram', grouped_med_unigram$total[10])
bigram_med_plot <- freq_plot(grouped_med_bigram, 'Remaining Posts: Bigram', grouped_med_bigram$total[10])
bigram_viral_plot <- freq_plot(grouped_top_bigram, 'Viral Posts: Bigram', grouped_top_bigram$total[10])
#put all four plots on a single grid
grid.arrange(unigram_viral_plot, unigram_med_plot,bigram_viral_plot, bigram_med_plot, nrow = 2,ncol=2)
unigram_all <- bind_rows(mutate(tidy_articles_med_unigram, viral = 0),
mutate(tidy_articles_top_unigram, viral = 1)) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(viral, word) %>%
group_by(viral)
viral_df_uni <- subset(unigram_all, viral==1) %>%
rename(n_viral = n) %>%
mutate(proportion_viral = n_viral / sum(n_viral))
mediocre_df_uni <- subset(unigram_all, viral==0) %>%
rename(n_med = n) %>%
mutate(proportion_med = n_med / sum(n_med))
merged_unigram <- inner_join(viral_df_uni, mediocre_df_uni, by='word')
ggplot(merged_unigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept=0, slope=1,color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
bigram_all <- bind_rows(mutate(tidy_articles_med_bigram, viral = 0),
mutate(tidy_articles_top_bigram, viral = 1)) %>%
count(viral, word) %>%
group_by(viral)
viral_df_bi <- subset(bigram_all, viral==1) %>%
rename(n_viral = n) %>%
mutate(proportion_viral = n_viral / sum(n_viral))
mediocre_df_bi <- subset(bigram_all, viral==0) %>%
rename(n_med = n) %>%
mutate(proportion_med = n_med / sum(n_med))
merged_bigram <- inner_join(viral_df_bi, mediocre_df_bi, by='word')
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format(), limits=c(0.001,0.01)) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
View(merged_bigram)
View(merged_bigram)
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none")
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'Word Choice in Viral Posts vs Average Posts: Bigrams',
xlab = 'Proportion Bigram, Viral Post',
ylab = 'Proportion Bigram, Average Post')
?labs
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'Word Choice in Viral Posts vs Average Posts: Bigrams',
x = 'Proportion Bigram, Viral Post',
y = 'Proportion Bigram, Average Post')
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'Word Choice in Viral Posts vs Average Posts: Bigrams',
x = 'Proportion Bigram, Viral Post',
y = 'Proportion Bigram, Average Post',
caption = 'Viral Post: Above 99th percentile in claps, Average Post: Within IQR in claps')
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'Word Choice in Viral Posts vs Average Posts: Bigrams',
x = 'Proportion Bigram, Viral Post',
y = 'Proportion Bigram, Average Post')
ggplot(merged_unigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept=0, slope=1,color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'Word Choice in Viral Posts vs Avg. Posts: Unigrams',
x = 'Unigram Proportion, Viral',
y = 'Unigram Proportion, Average')
ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'Word Choice in Viral Posts vs Avg. Posts: Bigrams',
x = 'Bigram Proportion, Viral',
y = 'Bigram Proportion, Average')
bigram_plot <- ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'Word Choice in Viral Posts vs Avg. Posts: Bigrams',
x = 'Bigram Proportion, Viral',
y = 'Bigram Proportion, Average')
unigram_scatter_plot <- ggplot(merged_unigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept=0, slope=1,color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'Word Choice in Viral Posts vs Avg. Posts: Unigrams',
x = 'Unigram Proportion, Viral',
y = 'Unigram Proportion, Average')
grid.arrange(unigram_scatter_plot, bigram_scatter_plot, nrow = 1)
bigram_scatter_plot <- ggplot(merged_bigram, aes(x = proportion_viral, y = proportion_med)) +
geom_abline(intercept = 0, slope = 1, color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
theme_minimal() +
theme(legend.position="none") +
labs(title = 'Word Choice in Viral Posts vs Avg. Posts: Bigrams',
x = 'Bigram Proportion, Viral',
y = 'Bigram Proportion, Average')
grid.arrange(unigram_scatter_plot, bigram_scatter_plot, nrow = 1)
scatter_grid <- grid.arrange(unigram_scatter_plot, bigram_scatter_plot, nrow = 1)
scatter_grid
getwd()
setwd('~/Desktop/tidytuesday/medium-articles')
?ggsave
ggsave('viral_vs_avg_scatter.png', plot = grid.arrange(unigram_scatter_plot, bigram_scatter_plot, nrow = 1))
ggsave('viral_vs_avg_scatter.png',
plot = grid.arrange(unigram_scatter_plot, bigram_scatter_plot, nrow = 1),
width = 6,
height = 4)
ggsave('viral_vs_avg_scatter.png',
plot = grid.arrange(unigram_scatter_plot, bigram_scatter_plot, nrow = 1),
width = 9,
height = 4.5)
bigram_scatter_plot
ggsave('barplot.png',
plot = grid.arrange(unigram_viral_plot, unigram_med_plot,bigram_viral_plot, bigram_med_plot, nrow = 2,ncol=2),
width = 6,
height = 6)
unigram_med_plot <- freq_plot(grouped_med_unigram, 'Avg. Posts: Unigram', grouped_med_unigram$total[10])
bigram_viral_plot <- freq_plot(grouped_top_bigram, 'Avg. Posts: Bigram', grouped_top_bigram$total[10])
ggsave('barplot.png',
plot = grid.arrange(unigram_viral_plot, unigram_med_plot,bigram_viral_plot, bigram_med_plot, nrow = 2,ncol=2),
width = 6,
height = 6)
bigram_viral_plot <- freq_plot(grouped_top_bigram, 'Viral Posts: Bigram', grouped_top_bigram$total[10])
bigram_med_plot <- freq_plot(grouped_med_bigram, 'Avg. Posts: Bigram', grouped_med_bigram$total[10])
ggsave('barplot.png',
plot = grid.arrange(unigram_viral_plot, unigram_med_plot,bigram_viral_plot, bigram_med_plot, nrow = 2,ncol=2),
width = 6,
height = 6)
#save other plots
ggsave('unigram_scatter.png', plot = unigram_scatter_plot)
ggsave('unigram_scatter.png',
plot = unigram_scatter_plot,
height = 4,
width = 5)
ggsave('unigram_scatter.png',
plot = unigram_scatter_plot,
height = 4,
width = 6)
ggsave('bigram_scatter.png',
plot = bigram_scatter_plot,
height = 4,
width = 6)
